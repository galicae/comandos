# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_genes.ipynb.

# %% auto 0
__all__ = ['filter_OGs', 'assign_homology', 'calculate_orthology_score']

# %% ../nbs/01_genes.ipynb 3
from pathlib import Path
from typing import Union

import numpy as np
import pandas as pd

from . import util

# %% ../nbs/01_genes.ipynb 9
def filter_OGs(
    x: Union[
        list, str
    ],  # list of the EggNOG OGs or comma-separated string of EggNOG OGs.
    paralog: str = "Eukaryota",  # the level of the paralog OG
    ortholog: str = "Bilateria",  # the level of the ortholog OG
) -> list:  # the paralog OG and ortholog OG
    "Find the EggNOG OGs at the the paralog and ortholog level."
    paralog_OG = ""
    ortholog_OG = ""
    if isinstance(x, str):
        x = x.split(",")
    for s in x:
        if paralog in s:
            paralog_OG = s
        if ortholog in s:
            ortholog_OG = s
    return [paralog_OG, ortholog_OG]

# %% ../nbs/01_genes.ipynb 14
def assign_homology(
    species_OGs,  # the dataframe with the gene_id and the EggNOG OGs
    paralog: str = "Eukaryota",  # the level of the paralog OG
    ortholog: str = "Bilateria",  # the level of the ortholog OG)
) -> pd.DataFrame:  # the dataframe with the gene_id, paralog OG and ortholog OG
    "Get the taxonomy of the genes."
    homologs = (
        species_OGs["eggNOG_OGs"]
        .apply(filter_OGs, paralog=paralog, ortholog=ortholog)
        .to_list()
    )
    taxonomy = pd.DataFrame(homologs, columns=["paralog", "ortholog"])
    species_OGs = species_OGs.join(taxonomy)

    orthologs = pd.DataFrame(
        species_OGs.groupby("gene_id")["ortholog"].apply(np.unique).str[0]
    )
    paralogs = pd.DataFrame(
        species_OGs.groupby("gene_id")["paralog"].apply(np.unique).str[0]
    )

    result = orthologs.join(paralogs)
    result.replace(to_replace="", value=None, inplace=True)
    return result

# %% ../nbs/01_genes.ipynb 21
def compare_orthology(query, target):
    result = []
    for x in query:
        result.append(target == x)

    result = pd.DataFrame(result)
    result.index = query.index
    return result

# %% ../nbs/01_genes.ipynb 22
def calculate_orthology_score(
    query: pd.DataFrame,  # the dataframe with the gene_id, paralog OG and ortholog OG for the query species
    target: pd.DataFrame,
) -> pd.DataFrame:
    orthologs = compare_orthology(query["ortholog"], target["ortholog"])
    paralogs = compare_orthology(query["paralog"], target["paralog"])
    orthology_score = orthologs.astype(int) + paralogs.astype(int)
    return orthology_score
